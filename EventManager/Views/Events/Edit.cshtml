@model EventManager.Event


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerId, "Manager", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ManagerId, Model.User.Id)
                @Html.DisplayFor(model => model.User.FullName)
                @Html.ValidationMessageFor(model => model.ManagerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventTypeId, "Event Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
				@Html.DropDownList("EventTypeId", (SelectList)(ViewBag.EventTypes),htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPublic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsPublic)
                    @Html.ValidationMessageFor(model => model.IsPublic, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<table class="table">
	<tr style="font-size:large">
		PARTICIPANTS
	</tr>
	<tr>
		@Html.ActionLink("Invite new participant", "Create", "Invitations", new {userId=Model.User.Id, eventId = Model.Id}, null)
	</tr>
	<tr>
		<th>
			@Html.DisplayNameFor(x=>Model.User.FullName)
		</th>
		<th>
			@Html.DisplayNameFor(x => Model.Participants.FirstOrDefault().ParticipantType)
		</th>
		<th>
			Actions
		</th>
	</tr>

	@foreach (Participant p in Model.Participants)
	{
	<tr>
		<td>
			@Html.DisplayFor(x => p.User.FullName)
		</td>
		<td>
			@Html.DisplayFor(x => p.ParticipantType.Type)
		</td>
		<td>
			@Html.ActionLink("Delete", "Delete", "Participants", new { id = p.Id }, null)

		</td>

	</tr>
	}
</table>

<table class="table">
	<tr style="font-size:large">
		INVITATIONS
	</tr>
	
	<tr>
		<th>
			@Html.DisplayNameFor(x => Model.User.FullName)
		</th>
		<th>
			@Html.DisplayNameFor(x => Model.Invitations.FirstOrDefault().ParticipantType)
		</th>
        <th>
            @Html.DisplayNameFor(x => Model.Invitations.FirstOrDefault().Email)
        </th>
		<th>
			Actions
		</th>
	</tr>

	@foreach (Invitation p in Model.Invitations)
	{
	<tr>
		<td>
            @if (p.User==null)
            {
              <text>"User not registered."</text>
            }
            else
            {
			@Html.DisplayFor(x => p.User.FullName)
            }

		</td>
		<td>
			@Html.DisplayFor(x => p.ParticipantType.Type)
		</td>
		<td>
			@Html.ActionLink("Cancel invitation", "Delete", "Invitations", new { id = p.Id }, null)
		</td>
        <th>
            @Html.DisplayFor(x => p.Email)
        </th>

	</tr>
	}
</table>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
